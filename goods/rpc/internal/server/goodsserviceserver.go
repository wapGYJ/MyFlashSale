// Code generated by goctl. DO NOT EDIT.
// Source: goods.proto

package server

import (
	"context"

	"myFlashSale/goods/rpc/internal/logic"
	"myFlashSale/goods/rpc/internal/svc"
	"myFlashSale/goods/rpc/pb/pb"
)

type GoodsServiceServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedGoodsServiceServer
}

func NewGoodsServiceServer(svcCtx *svc.ServiceContext) *GoodsServiceServer {
	return &GoodsServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *GoodsServiceServer) CheckStock(ctx context.Context, in *pb.StockReq) (*pb.StockResp, error) {
	l := logic.NewCheckStockLogic(ctx, s.svcCtx)
	return l.CheckStock(in)
}

func (s *GoodsServiceServer) LockStock(ctx context.Context, in *pb.LockStockRequest) (*pb.LockStockResponse, error) {
	l := logic.NewLockStockLogic(ctx, s.svcCtx)
	return l.LockStock(in)
}

func (s *GoodsServiceServer) GoodsCache(ctx context.Context, in *pb.CacheReq) (*pb.CacheResp, error) {
	l := logic.NewGoodsCacheLogic(ctx, s.svcCtx)
	return l.GoodsCache(in)
}

func (s *GoodsServiceServer) GetGoodsFromCache(ctx context.Context, in *pb.GetGoodsFromCacheReq) (*pb.GetGoodsFromCacheResp, error) {
	l := logic.NewGetGoodsFromCacheLogic(ctx, s.svcCtx)
	return l.GetGoodsFromCache(in)
}

func (s *GoodsServiceServer) GetPrice(ctx context.Context, in *pb.GetPriceReq) (*pb.GetPriceResp, error) {
	l := logic.NewGetPriceLogic(ctx, s.svcCtx)
	return l.GetPrice(in)
}
