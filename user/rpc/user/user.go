// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package user

import (
	"context"

	"myFlashSale/user/rpc/pb/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CheckDepositReq   = pb.CheckDepositReq
	CheckDepositResp  = pb.CheckDepositResp
	UpdataDepositReq  = pb.UpdataDepositReq
	UpdataDepositResp = pb.UpdataDepositResp
	UserRequest       = pb.UserRequest
	UserResponse      = pb.UserResponse

	User interface {
		Login(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*UserResponse, error)
		Register(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*UserResponse, error)
		Checkdeposit(ctx context.Context, in *CheckDepositReq, opts ...grpc.CallOption) (*CheckDepositResp, error)
		Updatadeposit(ctx context.Context, in *UpdataDepositReq, opts ...grpc.CallOption) (*UpdataDepositResp, error)
	}

	defaultUser struct {
		cli zrpc.Client
	}
)

func NewUser(cli zrpc.Client) User {
	return &defaultUser{
		cli: cli,
	}
}

func (m *defaultUser) Login(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*UserResponse, error) {
	client := pb.NewUserClient(m.cli.Conn())
	return client.Login(ctx, in, opts...)
}

func (m *defaultUser) Register(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*UserResponse, error) {
	client := pb.NewUserClient(m.cli.Conn())
	return client.Register(ctx, in, opts...)
}

func (m *defaultUser) Checkdeposit(ctx context.Context, in *CheckDepositReq, opts ...grpc.CallOption) (*CheckDepositResp, error) {
	client := pb.NewUserClient(m.cli.Conn())
	return client.Checkdeposit(ctx, in, opts...)
}

func (m *defaultUser) Updatadeposit(ctx context.Context, in *UpdataDepositReq, opts ...grpc.CallOption) (*UpdataDepositResp, error) {
	client := pb.NewUserClient(m.cli.Conn())
	return client.Updatadeposit(ctx, in, opts...)
}
